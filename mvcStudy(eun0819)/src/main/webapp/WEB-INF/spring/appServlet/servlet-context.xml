<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.1.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/**" location="/static/" />
	<!-- 원래코드: <resources mapping="/resources/**" location="/resources/" /> 
	 코드 의미=> /**: 하위아래 모든것을 포함한다. & location="/static/": root경로가 /static/으로 지정해 준다(기본 주소지정)-->

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>
	
	<context:component-scan base-package="com.spring.mvc" />
	
	<beans:bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<beans:property name="driverClassName" value="org.gjt.mm.mysql.Driver"></beans:property>
		<beans:property name="url" value="jdbc:mysql://localhost:3306/springstudy?serverTimezone=UTC"></beans:property>
		<beans:property name="username" value="root"></beans:property>
		<beans:property name="password" value="toor"></beans:property>
	</beans:bean>
	
	<!-- mybatis 선언 -->
	<beans:bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<beans:property name="dataSource" ref="dataSource"></beans:property>
		<beans:property name="mapperLocations" value="classpath:mappers/*.xml"></beans:property>
	</beans:bean>
	
	<beans:bean id="sqlSessionTemplate" class="org.mybatis.spring.SqlSessionTemplate">
	<!-- sqlSessionTemplate이 SqlSession을 implements하고 있다 그래서 sqlSession을 생성하지 않아도 알아서 업캐스팅 되어 오토와이어드와 연결된다. -->
		<beans:constructor-arg ref="sqlSessoinFactory"></beans:constructor-arg>
	</beans:bean>
	
	<beans:bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<!-- MapperScannerConfigurer: 어떠한 패키지 안에 있는 모든 매퍼를 스캔하라는 의미이다. -->
		<beans:property name="basePackage" value="com.spring.mvc.dao"></beans:property>
	</beans:bean>
	
	<beans:bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<beans:property name="maxUploadSize" value="52428800"></beans:property><!-- 52,428,800는 파일 사이즈이다, 1024*1024*50  -->
		<!-- 최대 업로드 가능한 바이트 크기, -1의 값은 제한이 없음을 의미, 기본값 -1, 반환 자료형은 long단위이다  -->
		<beans:property name="maxInMemorySize" value="52428800"></beans:property>
		<!-- 디스크에 임시 파일을 생성하기 이전에 메모리에 보관할 수 있는 최대 바이트의 크기, 기본값은 1MB, 지금은 50MB -->
	</beans:bean>
</beans:beans>
